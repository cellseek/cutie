weights: weights/cutie-base-mega.pth

# All "size" parameters represent the length of the shorter edge
# maximum internal processing size; reducing this speeds up processing
max_internal_size: 480

# Disable long-term memory for cell tracking
use_long_term: False

# Add memory every frame for immediate tracking
mem_every: 1

# Use minimal top_k for efficiency
top_k: 10

# Update every frame
stagger_updates: 1

# Process objects one by one to reduce memory usage
chunk_size: 1

save_aux: False
flip_aug: False

# Only keep 1 frame in working memory (essentially frame-by-frame)
max_mem_frames: 1

# Long-term memory settings (unused but kept for compatibility)
long_term:
  count_usage: True
  max_mem_frames: 10
  min_mem_frames: 5
  num_prototypes: 128
  max_num_tokens: 10000
  buffer_tokens: 2000

# Model configuration (from base.yaml)
model:
  pixel_mean: [0.485, 0.456, 0.406]
  pixel_std: [0.229, 0.224, 0.225]

  pixel_dim: 256
  key_dim: 64
  value_dim: 256
  sensory_dim: 256
  embed_dim: 256

  pixel_encoder:
    type: resnet50
    ms_dims: [1024, 512, 256]

  mask_encoder:
    type: resnet18
    final_dim: 256

  pixel_pe_scale: 32
  pixel_pe_temperature: 128

  object_transformer:
    embed_dim: 256 # ${model.embed_dim} resolved
    ff_dim: 2048
    num_heads: 8
    num_blocks: 3
    num_queries: 16
    read_from_pixel:
      input_norm: False
      input_add_pe: False
      add_pe_to_qkv: [True, True, False]
    read_from_past:
      add_pe_to_qkv: [True, True, False]
    read_from_memory:
      add_pe_to_qkv: [True, True, False]
    read_from_query:
      add_pe_to_qkv: [True, True, False]
      output_norm: False
    query_self_attention:
      add_pe_to_qkv: [True, True, False]
    pixel_self_attention:
      add_pe_to_qkv: [True, True, False]

  object_summarizer:
    embed_dim: 256 # ${model.object_transformer.embed_dim} resolved
    num_summaries: 16 # ${model.object_transformer.num_queries} resolved
    add_pe: True

  aux_loss:
    sensory:
      enabled: True
      weight: 0.01
    query:
      enabled: True
      weight: 0.01

  mask_decoder:
    # first value must equal embed_dim
    up_dims: [256, 128, 128]
